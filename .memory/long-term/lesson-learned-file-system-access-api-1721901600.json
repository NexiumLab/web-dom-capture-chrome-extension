{
  "title": "Technical Decision: DOM Saving Mechanism",
  "description": "This document records the decision to use the File System Access API for saving captured DOM content, moving away from the manual download approach.",
  "created_at": [
    "2024-07-25--16:00-PM",
    1721901600
  ],
  "updated_at": [
    "2024-07-25--16:00-PM",
    1721901600
  ],
  "last_accessed": 1721901600,
  "access_count": 1,
  "importance": 0.7,
  "related_modules": [
    "popup.js",
    "background.js",
    "manifest.json"
  ],
  "tags": [
    "dom-grabber",
    "file-system-access-api",
    "chrome-extension",
    "technical-decision",
    "dom-saving",
    "javascript",
    "web-api",
    "storage",
    "frontend",
    "lưu-dom",
    "lưu-file",
    "api-hệ-thống-file",
    "tiện-ích-chrome",
    "quyết-định-kỹ-thuật",
    "lưu-trữ",
    "giao-diện-người-dùng",
    "api-trình-duyệt",
    "phát-triển-web"
  ],
  "version": "1.0",
  "lesson": {
    "what": "Implemented the File System Access API to allow users to select a directory and save DOM captures directly to their local file system.",
    "why": "The previous method of forcing a manual download for each capture was inefficient. This new approach provides a better user experience by allowing persistent storage to a user-defined location.",
    "how": "1. Updated manifest.json to include a background service worker. 2. Modified popup.html to add UI for directory selection. 3. Rewrote popup.js to handle `window.showDirectoryPicker()`, store the directory handle in `chrome.storage.local`, and use the handle to write files.",
    "related_files": [
        {
            "file_name": "popup.js",
            "file_location": "./popup.js",
            "relationship": "Main implementation of the File System Access API logic."
        },
        {
            "file_name": "manifest.json",
            "file_location": "./manifest.json",
            "relationship": "Updated to support the background script required for the API."
        }
    ]
  }
} 